In Github
Settings > Developer Settings > Personal Access Tokens > Generate new token

-Check if I already have an SSH key.

-If not create one like this.
	ssh-keygen -t ed25519 -C "juandavidchaves@protonmail.com"
	
-Now that I have an SSH key I copy it to the clipboard
(pbcopy < ~/.ssh/id_ed25519.pub )

-Go to SSH and GPG keys > New SSH key > Give it a title and copy the whole thing.

-To test the connection write:
	ssh -T git@github.com

-If you find older keys or a warning message, remove outdated hosts
	ssh-keygen -R github.com


###################
git clone git@github.com:userName/repoName.git
git status
git init
git add 
	[fileName]
	. : all
git commit 
	-m ["message"]
git config --global user.email "juandavidchaves@protonmail.com"
git config --global user.name "JuanDChaves"
git log
git checkout  
	[commitID] : Use hashcode found in the log to go to a certain commit.
	[branchName] : Switch to a branch.
	-- : Current branch. Delete unstaged changes.
	. : all
	-b [newBranchName] : Create and Switch to a new branch.
git branch
	: To show what branch you are in.
	[newBranchName] : Add a new branch
	[newBranchName] [detachedHEADcommitID] : Add a new branch where a detached HEAD can go.
	-d : Delete only merged branches.
	-D : Delete merged or not merged branches 
git merge	
	[branchName] : Name of the branch to be merged with the one where you are standing.
git switch
	[branchName] : switch to a branch
	-c [newBranchName] : Create a new branch
git ls-files : See what files are in the staging area.
git rm 
	[fileName]
git restore : Delete unstaged changes
	. : all
	[fileName] 
	--staged [fileName] : Unstage modified staged file. 
git clean
	-d : delete all untracked directories and files
	-dn : list untracked files before delete
	-df : Delete the files listed
git reset 
	[fileName] : Copy last commited version in HEAD to staged modified file and unstage. 
	HEAD~[#steps back] : go back to a previous commit, modified files will be deleted.
	--hard HEAD~[#steps back] : go back to a previous commit, modified files will be deleted.
	--soft HEAD~[#steps back] : go back to a previous commit, modified files will remain staged.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

echo "# your-repo-name" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/username/your-repo-name.git
git push -u origin main


git remote add origin https://github.com/username/your-repo-name.git
git branch -M main
git push -u origin main
